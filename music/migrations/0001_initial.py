# Generated by Django 2.2.7 on 2019-12-27 13:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='manager',
            fields=[
                ('manager_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('manager_account', models.CharField(max_length=20)),
                ('manager_password', models.CharField(max_length=20)),
                ('manager_name', models.CharField(max_length=10)),
                ('manager_sex', models.CharField(max_length=1)),
                ('manager_age', models.IntegerField()),
                ('manager_phone', models.CharField(max_length=11)),
                ('manager_email', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='musician',
            fields=[
                ('musician_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('musician_name', models.CharField(max_length=10)),
                ('musician_sex', models.CharField(max_length=1)),
                ('musician_age', models.IntegerField()),
                ('musician_kind', models.CharField(max_length=3)),
                ('click_number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='software',
            fields=[
                ('software_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('software_name', models.CharField(max_length=10)),
                ('song_numbers', models.IntegerField()),
                ('pay_of_VIP', models.CharField(max_length=10)),
                ('click_number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='software_man',
            fields=[
                ('software_man_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('software_man_account', models.CharField(max_length=20)),
                ('software_man_password', models.CharField(max_length=20)),
                ('software_man_name', models.CharField(max_length=10)),
                ('software_man_sex', models.CharField(max_length=1)),
                ('software_man_age', models.IntegerField()),
                ('software_man_phone', models.CharField(max_length=11)),
                ('software_man_email', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='song_information',
            fields=[
                ('song_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('song_name', models.CharField(max_length=10)),
                ('singer', models.CharField(max_length=4)),
                ('lyrics_maker', models.CharField(max_length=4)),
                ('composer', models.CharField(max_length=4)),
                ('time', models.CharField(max_length=6)),
                ('software', models.CharField(max_length=10)),
                ('need_VIP', models.CharField(max_length=3)),
                ('need_pay', models.CharField(max_length=3)),
                ('payment', models.IntegerField()),
                ('tone_quality', models.CharField(max_length=10)),
                ('interlinkage', models.CharField(max_length=200)),
                ('click_number', models.IntegerField()),
                ('search_number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='song_lyrics',
            fields=[
                ('song_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('lyrics', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='STOP',
            fields=[
                ('song_number', models.IntegerField(primary_key=True, serialize=False)),
                ('song_name', models.CharField(max_length=10)),
                ('search_number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='user',
            fields=[
                ('user_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('user_account', models.CharField(max_length=20)),
                ('user_password', models.CharField(max_length=20)),
                ('user_name', models.CharField(max_length=10)),
                ('user_introduction', models.CharField(max_length=50, null=True)),
                ('user_email', models.CharField(max_length=20)),
                ('user_verification', models.CharField(max_length=4, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Song_list',
            fields=[
                ('songlist_number', models.IntegerField(primary_key=True, serialize=False)),
                ('songlist_name', models.CharField(max_length=10)),
                ('song_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.song_information')),
            ],
        ),
        migrations.CreateModel(
            name='CTOP',
            fields=[
                ('ranking', models.IntegerField(primary_key=True, serialize=False)),
                ('song_name', models.CharField(max_length=10)),
                ('click_number', models.IntegerField()),
                ('song_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.song_information')),
            ],
        ),
        migrations.CreateModel(
            name='collection',
            fields=[
                ('collection_number', models.IntegerField(primary_key=True, serialize=False)),
                ('song_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.song_information')),
                ('user_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.user')),
            ],
        ),
        migrations.CreateModel(
            name='Best_software',
            fields=[
                ('ranking', models.IntegerField(primary_key=True, serialize=False)),
                ('software_name', models.CharField(max_length=10)),
                ('song_number', models.IntegerField()),
                ('pay_of_VIP', models.CharField(max_length=10)),
                ('click_number', models.IntegerField()),
                ('software_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.software')),
            ],
        ),
        migrations.CreateModel(
            name='Best_singer',
            fields=[
                ('ranking', models.IntegerField(primary_key=True, serialize=False)),
                ('musician_name', models.CharField(max_length=10)),
                ('sex', models.CharField(max_length=1)),
                ('age', models.IntegerField()),
                ('click_number', models.IntegerField()),
                ('musician_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.musician')),
            ],
        ),
        migrations.CreateModel(
            name='Best_lyrics_maker',
            fields=[
                ('ranking', models.IntegerField(primary_key=True, serialize=False)),
                ('musician_name', models.CharField(max_length=10)),
                ('sex', models.CharField(max_length=1)),
                ('age', models.IntegerField()),
                ('click_number', models.IntegerField()),
                ('musician_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.musician')),
            ],
        ),
        migrations.CreateModel(
            name='Best_composer',
            fields=[
                ('ranking', models.IntegerField(primary_key=True, serialize=False)),
                ('musician_name', models.CharField(max_length=10)),
                ('sex', models.CharField(max_length=1)),
                ('age', models.IntegerField()),
                ('click_number', models.IntegerField()),
                ('musician_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.musician')),
            ],
        ),
    ]
